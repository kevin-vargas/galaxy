name: Test, Build And Deploy

on:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18
    - name: Coverage Report
      env:
        TEST_COVERAGE_THRESHOLD: 70
      run: |
        ./test_coverage.sh
        TOTAL=$(go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+')
        if (( $(echo "$TOTAL <= $TEST_COVERAGE_THRESHOLD" | bc -l) ))
        then
            echo "Current test coverage is below threshold. ${TOTAL}% < ${TEST_COVERAGE_THRESHOLD}%"
            exit 1
        fi
        echo "Successful coverage test"
  build:
    runs-on: ubuntu-20.04
    needs: test
    env:
      DOCKER_REGISTRY: docker.fast.ar
      IMAGE_NAME: docker.fast.ar/galaxy:latest
      PLATFORMS: linux/amd64,linux/arm64
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push docker
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ IMAGE_NAME }}
          platforms: ${{ PLATFORMS }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
      - name: Image digest
        run: |
          kubectl apply -f deployment/deployment.yml
          kubectl rollout restart deployment galaxy-server -n galaxy